import React from "react";
import { motion, AnimatePresence } from "framer-motion";

/* ===================== –î–ï–†–ï–ö: –¢–ê–ü–°–´–†–ú–ê–õ–ê–† ===================== */
// –ò–∫–æ–Ω/—Ç“Ø—Å—Ç–µ—Ä —Ç–µ–∫ –≤–∏–∑—É–∞–ª“ì–∞; “õ–∞–ª–∞“ì–∞–Ω—ã“£—à–∞ ”©–∑–≥–µ—Ä—Ç–µ –±–µ—Ä
const TASKS = [
  {
    id: "to-mom",
    icon: "ü©µ",
    title: "–ê–Ω–∞–º–∞ –∂—ã–ª—ã —Å”©–∑",
    goal: "–ú–µ–π—ñ—Ä—ñ–º –º–µ–Ω —Ä–∏–∑–∞—à—ã–ª—ã“õ—Ç—ã —Å”©–∑–±–µ–Ω –∂–µ—Ç–∫—ñ–∑—É.",
    prompts: [
      "–ê–Ω–∞—à—ã–º, —Å–µ–Ω—ñ“£ –º–∞“ì–∞–Ω “Ø–π—Ä–µ—Ç–∫–µ–Ω –µ“£ “õ“±–Ω–¥—ã —Å–∞–±–∞“ì—ã“£‚Ä¶",
      "–ú–µ–Ω –∞–Ω–∞–º–¥—ã –Ω–µ “Ø—à—ñ–Ω –∂–∞“õ—Å—ã –∫”©—Ä–µ–º—ñ–Ω?",
      "–°–µ–Ω—ñ“£ —Å”©–∑—ñ“£ –∞–Ω–∞“£–∞ –Ω–µ —Å—ã–π–ª–∞–π –∞–ª–∞–¥—ã –¥–µ–ø –æ–π–ª–∞–π—Å—ã“£?"
    ],
    color: "from-pink-100 to-blue-100",
  },
  {
    id: "to-dad",
    icon: "üíô",
    title: "”ò–∫–µ–º–µ –∞–π—Ç“õ—ã–º –∫–µ–ª–≥–µ–Ω —Å”©–∑",
    goal: "–ï—Ä –∞–¥–∞–º“ì–∞ –¥–µ–≥–µ–Ω —Å–µ–Ω—ñ–º –º–µ–Ω “õ“±—Ä–º–µ—Ç —Å–µ–∑—ñ–º—ñ–Ω –Ω—ã“ì–∞–π—Ç—É.",
    prompts: [
      "”ò–∫–µ, –º–µ–Ω —Å–µ–Ω—ñ –º–∞“õ—Ç–∞–Ω –µ—Ç–µ–º, —Å–µ–±–µ–±—ñ‚Ä¶",
      "–ú–µ–Ω —Å–∞“ì–∞–Ω –∞–π—Ç“õ—ã–º –∫–µ–ª–µ—Ç—ñ–Ω, –±—ñ—Ä–∞“õ –∞–π—Ç–∞ –∞–ª–º–∞–π –∂“Ø—Ä–≥–µ–Ω —Å”©–∑—ñ–º‚Ä¶",
      "–°–µ–Ω—ñ“£ —Å”©–∑—ñ“£–¥—ñ –µ—Å—Ç—ñ–≥–µ–Ω–¥–µ ”ô–∫–µ“£ –Ω–µ —Å–µ–∑—ñ–Ω–µ–¥—ñ –¥–µ–ø –æ–π–ª–∞–π—Å—ã“£?"
    ],
    color: "from-blue-100 to-sky-100",
  },
  {
    id: "to-teacher",
    icon: "üíö",
    title: "“∞—Å—Ç–∞–∑—ã–º–∞ —Ä–∞—Ö–º–µ—Ç",
    goal: "–ê–ª“ì—ã—Å –∞–π—Ç—É –º”ô–¥–µ–Ω–∏–µ—Ç—ñ –º–µ–Ω —ç–º–æ—Ü–∏—è–ª—ã“õ —Å–∞—É–∞—Ç.",
    prompts: [
      "–ú–µ–Ω—ñ“£ “±—Å—Ç–∞–∑—ã–º–Ω–∞–Ω “Ø–π—Ä–µ–Ω–≥–µ–Ω –µ“£ –º–∞“£—ã–∑–¥—ã 3 –Ω”ô—Ä—Å–µ‚Ä¶",
      "“∞—Å—Ç–∞–∑—ã–º –º–µ–Ω—ñ“£ ”©–º—ñ—Ä—ñ–º–¥–µ –Ω–µ ”©–∑–≥–µ—Ä—Ç—Ç—ñ?",
      "–ê–ª“ì—ã—Å—ã–º “õ–∞–Ω–¥–∞–π —Ç“Ø—Å–ø–µ–Ω –±–µ–π–Ω–µ–ª–µ–Ω–µ–¥—ñ?"
    ],
    color: "from-emerald-100 to-emerald-50",
  },
  {
    id: "self-listen",
    icon: "üß°",
    title: "–ú–µ–Ω ”©–∑—ñ–º–¥—ñ —Ç—ã“£–¥–∞–π–º—ã–Ω",
    goal: "”®–∑—ñ–Ω-”©–∑—ñ —Ç–∞–Ω—É –∂”ô–Ω–µ —ñ—à–∫—ñ —Ä–µ—Ñ–ª–µ–∫—Å–∏—è.",
    prompts: [
      "“ö–∞–∑—ñ—Ä –º–µ–Ω –Ω–µ —Å–µ–∑—ñ–ø —Ç“±—Ä–º—ã–Ω?",
      "–ö”©“£—ñ–ª-–∫“Ø–π—ñ–º “õ–∞–Ω–¥–∞–π –∏—ñ—Å, —Ç“Ø—Å –Ω–µ–º–µ—Å–µ –¥—ã–±—ã—Å?",
      "”®–∑—ñ–º–µ “õ–∞–Ω–¥–∞–π –∂–∞“õ—Å—ã —Å”©–∑ –∞–π—Ç–∞ –∞–ª–∞–º—ã–Ω?"
    ],
    color: "from-orange-100 to-amber-100",
  },
  {
    id: "to-friend",
    icon: "üíõ",
    title: "–î–æ—Å—ã–º–∞ –∂—ã–ª—ã —Å”©–∑",
    goal: "”ò–ª–µ—É–º–µ—Ç—Ç—ñ–∫ –±–∞–π–ª–∞–Ω—ã—Å—Ç–∞—Ä –º–µ–Ω —ç–º–ø–∞—Ç–∏—è.",
    prompts: [
      "–ú–µ–Ω —Å–µ–Ω—ñ–º–µ–Ω –¥–æ—Å –±–æ–ª“ì–∞–Ω—ã–º–∞ “õ—É–∞–Ω—ã—à—Ç—ã–º—ã–Ω, ”©–π—Ç–∫–µ–Ω—ñ‚Ä¶",
      "–°–µ–Ω—ñ“£ “õ–∞–Ω–¥–∞–π “õ–∞—Å–∏–µ—Ç—ñ“£ –º–∞“ì–∞–Ω “Ø–ª–≥—ñ –±–æ–ª–∞–¥—ã?",
      "–ï–≥–µ—Ä —Å–µ–Ω —Ä–µ–Ω–∂—ñ–ø —Ç“±—Ä—Å–∞“£, –º–µ–Ω –Ω–µ –∞–π—Ç–∞—Ä –µ–¥—ñ–º?"
    ],
    color: "from-yellow-100 to-lime-100",
  },
  {
    id: "to-nature",
    icon: "üíú",
    title: "–ú–µ–Ω —Ç–∞–±–∏“ì–∞—Ç“õ–∞ –∞–π—Ç–∞–º",
    goal: "–¢–∞–±–∏“ì–∞—Ç–ø–µ–Ω —ç–º–æ—Ü–∏–æ–Ω–∞–ª–¥—ã –±–∞–π–ª–∞–Ω—ã—Å.",
    prompts: [
      "–¢–∞–±–∏“ì–∞—Ç –∞–Ω–∞, –º–µ–Ω —Å–µ–Ω–µ–Ω –∫–µ—à—ñ—Ä—ñ–º —Å“±—Ä–∞–π–º—ã–Ω, —Å–µ–±–µ–±—ñ‚Ä¶",
      "–ú–µ–Ω —Å–µ–Ω—ñ“£ ”ô—Å–µ–º–¥—ñ–≥—ñ“£–¥—ñ —Å–µ–∑–≥–µ–Ω —Å”ô—Ç—ñ–º‚Ä¶",
      "–¢–∞–±–∏“ì–∞—Ç“õ–∞ “õ–∞–Ω–¥–∞–π –∂–∞“õ—Å—ã–ª—ã“õ –∂–∞—Å–∞–π –∞–ª–∞–º—ã–Ω?"
    ],
    color: "from-purple-100 to-fuchsia-100",
  },
  {
    id: "to-future",
    icon: "‚ù§Ô∏è",
    title: "–ë–æ–ª–∞—à–∞“ì—ã–º–∞ —Ö–∞—Ç",
    goal: "–ú–∞“õ—Å–∞—Ç “õ–∞–ª—ã–ø—Ç–∞—Å—Ç—ã—Ä—É –∂”ô–Ω–µ –ø–æ–∑–∏—Ç–∏–≤—Ç—ñ –±–æ–ª–∞—à–∞“õ –∫”©—Ä—É.",
    prompts: [
      "–ë–æ–ª–∞—à–∞“õ—Ç–∞“ì—ã –º–µ–Ω, —Å–µ–Ω –Ω–µ–≥–µ “õ–æ–ª –∂–µ—Ç–∫—ñ–∑–¥—ñ“£?",
      "–°–∞“ì–∞–Ω “õ–∞–∑—ñ—Ä–¥–µ–Ω –Ω–µ –∞–π—Ç“õ—ã–º –∫–µ–ª–µ–¥—ñ?",
      "–ë“Ø–≥—ñ–Ω–≥—ñ –∞—Ä–º–∞–Ω—ã–º –µ—Ä—Ç–µ“£–≥—ñ ”©–º—ñ—Ä—ñ–º–º–µ–Ω “õ–∞–ª–∞–π –±–∞–π–ª–∞–Ω—ã—Å–∞–¥—ã?"
    ],
    color: "from-rose-100 to-rose-50",
  },
  {
    id: "to-society",
    icon: "ü§ç",
    title: "“ö–æ“ì–∞–º“ì–∞ “Ø–Ω–¥–µ—É",
    goal: "–ê–∑–∞–º–∞—Ç—Ç—ã“õ —Å–∞–Ω–∞ –∂”ô–Ω–µ ”ô–ª–µ—É–º–µ—Ç—Ç—ñ–∫ –∂–∞—É–∞–ø–∫–µ—Ä—à—ñ–ª—ñ–∫.",
    prompts: [
      "–ú–µ–Ω—ñ“£ “õ–æ“ì–∞–º—ã–º “õ–∞–Ω–¥–∞–π –±–æ–ª“ì–∞–Ω—ã–Ω “õ–∞–ª–∞–π–º—ã–Ω?",
      "–ï–≥–µ—Ä ”ô–ª–µ–º–¥—ñ ”©–∑–≥–µ—Ä—Ç–∫—ñ–º –∫–µ–ª—Å–µ, –Ω–µ–¥–µ–Ω –±–∞—Å—Ç–∞—Ä –µ–¥—ñ–º?",
      "–ú–µ–Ω—ñ“£ —Å”©–∑—ñ–º –∞–¥–∞–º–¥–∞—Ä“ì–∞ “õ–∞–Ω–¥–∞–π “Ø–º—ñ—Ç —Å—ã–π–ª–∞–π –∞–ª–∞–¥—ã?"
    ],
    color: "from-slate-100 to-slate-50",
  },
  {
    id: "color-of-feeling",
    icon: "üí´",
    title: "–ú–µ–Ω—ñ“£ —Å–µ–∑—ñ–º—ñ–º–Ω—ñ“£ —Ç“Ø—Å—ñ",
    goal: "–≠–º–æ—Ü–∏—è–Ω—ã –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è–ª–∞—É –∂”ô–Ω–µ —à—ã“ì–∞—Ä–º–∞—à—ã–ª—ã“õ —Å”©–π–ª–µ—É.",
    prompts: [
      "–ë“Ø–≥—ñ–Ω–≥—ñ –∫”©“£—ñ–ª-–∫“Ø–π—ñ–º–Ω—ñ“£ —Ç“Ø—Å—ñ‚Ä¶",
      "“ö–∞–π –∫–µ–∑–¥–µ –æ–ª —Ç“Ø—Å ”©–∑–≥–µ—Ä–µ–¥—ñ?",
      "–û–ª —Ç“Ø—Å —Å”©–π–ª–µ—Å–µ, –º–∞“ì–∞–Ω –Ω–µ –∞–π—Ç–∞—Ä –µ–¥—ñ?"
    ],
    color: "from-cyan-100 to-sky-100",
  },
  {
    id: "thanks-marathon",
    icon: "üïäÔ∏è",
    title: "‚Äú–†–∞—Ö–º–µ—Ç‚Äù –º–∞—Ä–∞—Ñ–æ–Ω—ã",
    goal: "–ö“Ø–Ω–¥–µ–ª—ñ–∫—Ç—ñ –ø–æ–∑–∏—Ç–∏–≤—Ç—ñ “õ–∞—Ä—ã–º-“õ–∞—Ç—ã–Ω–∞—Å.",
    prompts: [
      "–ë“Ø–≥—ñ–Ω –º–µ–Ω –∫—ñ–º–≥–µ, –Ω–µ “Ø—à—ñ–Ω –∞–ª“ì—ã—Å –∞–π—Ç—Ç—ã–º?",
      "–ê–ø—Ç–∞ —Å–æ“£—ã–Ω–¥–∞: –∞–ª“ì—ã—Å –∞–π—Ç“õ–∞–Ω–¥–∞ ”©–∑—ñ–º–¥—ñ “õ–∞–ª–∞–π —Å–µ–∑—ñ–Ω–¥—ñ–º?"
    ],
    color: "from-teal-100 to-teal-50",
  },
  {
    id: "wins-and-mistakes",
    icon: "üí¨",
    title: "“ö–∞—Ç–µ–ª—ñ–∫—Ç–µ—Ä—ñ–º –º–µ–Ω –∂–µ—Ç—ñ—Å—Ç—ñ–∫—Ç–µ—Ä—ñ–º–µ —Å”©–∑",
    goal: "”®–∑—ñ–Ω –∫—ñ–Ω”ô–ª–∞–º–∞–π, –¥–∞–º—É“ì–∞ –±–∞“ì—ã—Ç—Ç–∞—É.",
    prompts: [
      "–ë–∏—ã–ª“ì—ã –µ“£ “Ø–ª–∫–µ–Ω –∂–µ—Ç—ñ—Å—Ç—ñ–≥—ñ–º‚Ä¶",
      "–ï“£ “Ø–ª–∫–µ–Ω —Å–∞–±–∞“ì—ã–º/“õ–∞—Ç–µ–ª—ñ–≥—ñ–º –∂”ô–Ω–µ –æ–¥–∞–Ω –Ω–µ “Ø–π—Ä–µ–Ω–¥—ñ–º?",
      "”®–∑—ñ–º–¥—ñ “õ–∞–ª–∞–π –∫–µ—à—ñ—Ä–µ–º?"
    ],
    color: "from-indigo-100 to-indigo-50",
  },
  {
    id: "small-happiness",
    icon: "üå±",
    title: "–ú–µ–Ω—ñ“£ –∫—ñ—à–∫–µ–Ω—Ç–∞–π –±–∞“õ—ã—Ç—Ç–∞—Ä—ã–º",
    goal: "–†–∞“õ–º–µ—Ç –∞–π—Ç—É –∂”ô–Ω–µ –ø–æ–∑–∏—Ç–∏–≤—Ç—ñ –æ–π–ª–∞—É.",
    prompts: [
      "–ú–µ–Ω—ñ –±“Ø–≥—ñ–Ω –Ω–µ “õ—É–∞–Ω—Ç—Ç—ã?",
      "–ú–µ–Ω “Ø—à—ñ–Ω –±–∞“õ—ã—Ç –¥–µ–≥–µ–Ω –Ω–µ?",
      "–ë–∞“õ—ã—Ç—Ç—ã –∫“Ø–Ω “õ–∞–Ω–¥–∞–π?"
    ],
    color: "from-green-100 to-emerald-50",
  },
  {
    id: "one-word",
    icon: "üîÆ",
    title: "–ï–≥–µ—Ä ”ô–ª–µ–º–≥–µ –±—ñ—Ä —Å”©–∑ –∞–π—Ç–∞ –∞–ª—Å–∞–º‚Ä¶",
    goal: "”®–º—ñ—Ä–≥–µ –∫”©–∑“õ–∞—Ä–∞—Å –ø–µ–Ω –º–∞“ì—ã–Ω–∞–Ω—ã –∞—à—É.",
    prompts: ["–ú–µ–Ω ”ô–ª–µ–º–≥–µ –±—ñ—Ä “ì–∞–Ω–∞ —Å”©–∑ –∞–π—Ç–∞ –∞–ª—Å–∞–º, –æ–ª —Å”©–∑‚Ä¶"],
    color: "from-violet-100 to-violet-50",
  },

  // ==== “ö–æ—Å—ã–º—à–∞ ‚Äú–ë–∞–ª–∞ —Å–µ–∑—ñ–Ω–µ –∞–ª–∞—Ç—ã–Ω‚Äù —Å–µ—Ä–∏—è—Å—ã ====
  {
    id: "name-feelings",
    icon: "üß©",
    title: "–≠–º–æ—Ü–∏—è–Ω—ã –∞—Ç–∞—É –∂”ô–Ω–µ —Å–∏–ø–∞—Ç—Ç–∞—É",
    goal: "–≠–º–æ—Ü–∏—è–Ω—ã —Å”©–∑–±–µ–Ω –∞–Ω—ã“õ—Ç–∞–ø, —Ç“Ø—Å—ñ–Ω—É.",
    prompts: [
      "–ö“Ø–Ω–¥–µ–ª—ñ–∫—Ç—ñ ”©–º—ñ—Ä–¥–µ–Ω –±—ñ—Ä –∂–∞“ì–¥–∞–π –∂–∞–∑: —Å–æ–ª –∫–µ–∑–¥–µ “õ–∞–Ω–¥–∞–π —Å–µ–∑—ñ–º –±–æ–ª–¥—ã?",
      "–≠–º–æ—Ü–∏—è–Ω—ã 3 —Å”©–∑–±–µ–Ω —Å–∏–ø–∞—Ç—Ç–∞ (–º—ã—Å: “õ—É–∞–Ω—ã—à, –∂—ã–ª—ã, –µ—Ä–∫—ñ–Ω–¥—ñ–∫)."
    ],
    color: "from-amber-100 to-orange-100",
  },
  {
    id: "feelings-map",
    icon: "üó∫Ô∏è",
    title: "–°–µ–∑—ñ–º –∫–∞—Ä—Ç–∞—Å—ã–Ω —Ç–æ–ª—Ç—ã—Ä—É",
    goal: "–°–µ–∑—ñ–º –¥–µ“£–≥–µ–π—ñ–Ω –∂”ô–Ω–µ –¥–µ–Ω–µ–¥–µ–≥—ñ –æ—Ä–Ω—ã–Ω —Å–µ–∑—ñ–Ω—É.",
    prompts: [
      "–ë“Ø–≥—ñ–Ω–≥—ñ –µ“£ –∫“Ø—à—Ç—ñ 3 —Å–µ–∑—ñ–º—ñ“£–¥—ñ –±–µ–ª–≥—ñ–ª–µ.",
      "”ò—Ä —Å–µ–∑—ñ–º –¥–µ–Ω–µ–¥–µ “õ–∞–π –∂–µ—Ä–¥–µ —Å–µ–∑—ñ–ª–µ–¥—ñ?",
      "–ù–µ–≥–µ —Å–æ–ª–∞–π —Å–µ–∑—ñ–Ω–¥—ñ“£?"
    ],
    color: "from-lime-100 to-lime-50",
  },
  {
    id: "daily-essay",
    icon: "üìù",
    title: "¬´–ú–µ–Ω—ñ“£ –∫“Ø–Ω–¥–µ–ª—ñ–∫—Ç—ñ —Å–µ–∑—ñ–º—ñ–º¬ª —ç—Å—Å–µ—Å—ñ",
    goal: "”®–∑—ñ–Ω-”©–∑—ñ —Ç“Ø—Å—ñ–Ω—É –∂”ô–Ω–µ —Å”©–π–ª–µ—É –¥–∞“ì–¥—ã—Å—ã.",
    prompts: [
      "–ë“Ø–≥—ñ–Ω “õ–∞–ª–∞–π —Å–µ–∑—ñ–Ω–¥—ñ“£? 5‚Äì7 —Å”©–π–ª–µ–º –∂–∞–∑.",
      "–°–µ–±–µ–±—ñ “õ–∞–Ω–¥–∞–π? –°–∞“ì–∞–Ω “õ–∞–ª–∞–π ”ô—Å–µ—Ä –µ—Ç—Ç—ñ?"
    ],
    color: "from-zinc-100 to-zinc-50",
  },
  {
    id: "thought-vs-feeling",
    icon: "üîç",
    title: "–°–µ–∑—ñ–º –º–µ–Ω –æ–π ‚Äî –∞–π—ã—Ä–º–∞—à—ã–ª—ã“ì—ã–Ω —Ç–∞–ø",
    goal: "–û–π –º–µ–Ω —Å–µ–∑—ñ–º–¥—ñ –∞–∂—ã—Ä–∞—Ç—É.",
    prompts: [
      "“ö–∞–π—Å—ã—Å—ã —Å–µ–∑—ñ–º, “õ–∞–π—Å—ã—Å—ã –æ–π? ‚Äî ¬´–ú–µ–Ω –±“Ø–≥—ñ–Ω —à–∞—Ä—à–∞–¥—ã–º.¬ª / ¬´–ú–µ–Ω—ñ“£—à–µ, —Å–∞–±–∞“õ “õ–∏—ã–Ω.¬ª / ¬´–ú–µ–Ω “õ–æ—Ä—ã“õ—Ç—ã–º.¬ª / ¬´–ö–µ–ª–µ—Å—ñ –∂–æ–ª—ã –∂–∞“õ—Å—ã —ñ—Å—Ç–µ–π–º—ñ–Ω –¥–µ–ø –æ–π–ª–∞–π–º—ã–Ω.¬ª"
    ],
    color: "from-yellow-100 to-rose-100",
  },
  {
    id: "dialog-with-feeling",
    icon: "üí≠",
    title: "–°–µ–∑—ñ–º–º–µ–Ω –¥–∏–∞–ª–æ–≥",
    goal: "–≠–º–æ—Ü–∏—è–ª–∞—Ä–¥—ã “õ–∞–±—ã–ª–¥–∞—É –∂”ô–Ω–µ ”©“£–¥–µ—É.",
    prompts: [
      "¬´“ö–æ—Ä“õ—ã–Ω—ã—à¬ª –Ω–µ–º–µ—Å–µ ¬´–†–µ–Ω—ñ—à¬ª —Å–µ–∑—ñ–º—ñ–Ω–µ —Ö–∞—Ç –∂–∞–∑.",
      "–û–Ω—ã–º–µ–Ω “õ–∞–ª–∞–π –∂“±–º—ã—Å —ñ—Å—Ç–µ–π—Å—ñ“£ –∂”ô–Ω–µ “õ–∞–ª–∞–π –∂–µ“£–µ—Å—ñ“£?"
    ],
    color: "from-sky-100 to-cyan-100",
  },
  {
    id: "feeling-colors",
    icon: "üé®",
    title: "–°–µ–∑—ñ–º —Ç“Ø—Å—Ç–µ—Ä—ñ",
    goal: "–≠–º–æ—Ü–∏—è–Ω—ã –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è–ª–∞—É.",
    prompts: [
      "–ù–µ–≥—ñ–∑–≥—ñ —Å–µ–∑—ñ–º–¥–µ—Ä–≥–µ (“õ—É–∞–Ω—ã—à, “õ–∞–π“ì—ã, –∞—à—É, “õ–æ—Ä“õ—ã–Ω—ã—à, —Ç–∞“£–¥–∞–Ω—ã—Å) —Ç“Ø—Å —Ç–∞“£–¥–∞–ø, —Å—É—Ä–µ—Ç—Ç–µ –Ω–µ–º–µ—Å–µ —Å–∏–ø–∞—Ç—Ç–∞.",
      "“ö–∞–π —Ç“Ø—Å –∫”©“£—ñ–ª-–∫“Ø–π—ñ“£–¥—ñ “õ–∞–ª–∞–π ”©–∑–≥–µ—Ä—Ç–µ–¥—ñ?"
    ],
    color: "from-fuchsia-100 to-pink-100",
  },
  {
    id: "feeling-reasons",
    icon: "üß†",
    title: "–°–µ–∑—ñ–º–Ω—ñ“£ —Å–µ–±–µ–±—ñ",
    goal: "–°–µ–∑—ñ–º–¥—ñ —Å–µ–±–µ–ø—Ç–µ—Ä—ñ–º–µ–Ω –±–∞–π–ª–∞–Ω—ã—Å—Ç—ã—Ä—É.",
    prompts: [
      "–ö“Ø–Ω–¥–µ–ª—ñ–∫—Ç—ñ –±—ñ—Ä–Ω–µ—à–µ –∂–∞“ì–¥–∞–π –∂–∞–∑: ¬´–ú–µ–Ω “õ–∞–ª–∞–π —Ä–µ–∞–∫—Ü–∏—è –∂–∞—Å–∞–¥—ã–º?¬ª",
      "–°–æ—Å—ã–Ω ¬´–ù–µ–≥–µ –æ—Å—ã–ª–∞–π —Å–µ–∑—ñ–Ω–¥—ñ–º?¬ª –¥–µ–ø —Ç–∞–ª–¥–∞."
    ],
    color: "from-stone-100 to-stone-50",
  },
  {
    id: "relax-breath",
    icon: "ü´Å",
    title: "–†–µ–ª–∞–∫—Å–∞—Ü–∏—è –∂”ô–Ω–µ —Ç—ã–Ω—ã—Å",
    goal: "–°–µ–∑—ñ–º–¥–µ—Ä–¥—ñ –±–∞“õ—ã–ª–∞—É, —Ç—ã–Ω—ã—Å ”ô–¥i—Å—Ç–µ—Ä—ñ.",
    prompts: [
      "–¢–µ—Ä–µ“£ –¥–µ–º –∞–ª ‚Äî –±–∞—è—É —à—ã“ì–∞—Ä. –ñ–∞—Ç—Ç—ã“ì—É–¥–∞–Ω –∫–µ–π—ñ–Ω–≥—ñ —Å–µ–∑—ñ–º—ñ“£–¥—ñ –∂–∞–∑.",
      "–ê–ª“ì–∞—à“õ—ã —Å–µ–∑—ñ–º–º–µ–Ω —Å–∞–ª—ã—Å—Ç—ã—Ä."
    ],
    color: "from-teal-100 to-emerald-100",
  },
];

/* ===================== –ö”®–ú–ï–ö–®–Ü: –ñ–ï–†–ì–Ü–õ–Ü–ö–¢–Ü –°–ê“ö–¢–ê–£ ===================== */
const STORAGE_KEY = "realtalktime_answers_v1";
function loadAll() {
  try { return JSON.parse(localStorage.getItem(STORAGE_KEY) || "{}"); }
  catch { return {}; }
}
function saveOne(id, text) {
  const all = loadAll();
  all[id] = { text, updatedAt: new Date().toISOString() };
  localStorage.setItem(STORAGE_KEY, JSON.stringify(all));
}

/* ===================== UI –ö–û–ú–ü–û–ù–ï–ù–¢ ===================== */
export default function RealTalkTime() {
  const [active, setActive] = React.useState(null); // task object or null
  const [draft, setDraft] = React.useState("");
  const [savedMap, setSavedMap] = React.useState(() => loadAll());
  const [query, setQuery] = React.useState("");

  const openTask = (t) => {
    const prev = savedMap?.[t.id]?.text || "";
    setDraft(prev);
    setActive(t);
  };
  const closeTask = () => setActive(null);

  const onSave = () => {
    if (!active) return;
    saveOne(active.id, draft);
    setSavedMap(loadAll());
  };

  const filtered = TASKS.filter(
    (t) =>
      t.title.toLowerCase().includes(query.toLowerCase()) ||
      t.prompts.some((p) => p.toLowerCase().includes(query.toLowerCase()))
  );

  return (
    <div className="container mx-auto max-w-6xl px-4 py-10">
      {/* Title */}
      <motion.h1
        initial={{ opacity: 0, y: 10 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.45 }}
        className="text-3xl md:text-4xl font-extrabold text-slate-900 text-center"
      >
        SeLFtALK (EQ) ‚Äî{" "}
        <span className="text-[#1F7A8C]">¬´–°”®–ô–õ–ï, –°–ï–ó–Ü–ù, –ë”®–õ–Ü–°¬ª</span>
      </motion.h1>
      <p className="mt-2 text-center text-slate-600">
        –°–µ–∑—ñ–º–≥–µ –Ω–µ–≥—ñ–∑–¥–µ–ª–≥–µ–Ω —Å”©–π–ª–µ—Ç—É —Ç–∞–ø—Å—ã—Ä–º–∞–ª–∞—Ä—ã. –ö–∞—Ä—Ç–æ—á–∫–∞–Ω—ã –∞—à—ã–ø, —Å“±—Ä–∞“õ—Ç–∞—Ä“ì–∞ –∂–∞—É–∞–ø –∂–∞–∑.
        –ñ–∞—É–∞–ø—Ç–∞—Ä “õ“±—Ä—ã–ª“ì—ã“£–¥–∞ <strong>–∂–µ—Ä–≥—ñ–ª—ñ–∫—Ç—ñ —Ç“Ø—Ä–¥–µ —Å–∞“õ—Ç–∞–ª–∞–¥—ã</strong>.
      </p>

      {/* Search */}
      <div className="mt-6 flex justify-center">
        <input
          value={query}
          onChange={(e) => setQuery(e.target.value)}
          placeholder="–Ü–∑–¥–µ—É: ¬´–∞–Ω–∞¬ª, ¬´“õ–æ“ì–∞–º¬ª, ¬´—Ç—ã–Ω—ã—Å¬ª‚Ä¶"
          className="w-full md:w-2/3 rounded-xl border border-slate-200 px-4 py-3 outline-none focus:ring-2 focus:ring-teal-500/60"
        />
      </div>

      {/* Grid */}
      <div className="mt-8 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {filtered.map((t) => {
          const saved = savedMap?.[t.id]?.text?.trim();
          return (
            <button
              key={t.id}
              onClick={() => openTask(t)}
              className={`text-left rounded-2xl border border-slate-200 bg-white/80 backdrop-blur p-5 shadow hover:-translate-y-0.5 hover:shadow-lg transition group`}
            >
              <div className={`rounded-xl bg-gradient-to-r ${t.color} p-3 w-12 h-12 flex items-center justify-center text-xl`}>
                {t.icon}
              </div>
              <h3 className="mt-3 text-lg font-bold text-slate-900">{t.title}</h3>
              <p className="text-sm text-slate-500">{t.goal}</p>
              <ul className="mt-3 text-sm text-slate-600 list-disc pl-5 space-y-1">
                {t.prompts.slice(0, 2).map((p) => (
                  <li key={p} className="line-clamp-2">{p}</li>
                ))}
              </ul>
              {saved && (
                <div className="mt-3 inline-flex items-center text-xs font-medium text-teal-700">
                  ‚úì –ñ–∞—É–∞–ø —Å–∞“õ—Ç–∞–ª“ì–∞–Ω
                </div>
              )}
            </button>
          );
        })}
      </div>

      {/* Drawer / Modal */}
      <AnimatePresence>
        {active && (
          <motion.div
            key={active.id}
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 z-50 bg-black/40 flex items-end md:items-center justify-center p-4"
            onClick={closeTask}
          >
            <motion.div
              initial={{ y: 30, opacity: 0 }}
              animate={{ y: 0, opacity: 1 }}
              exit={{ y: 30, opacity: 0 }}
              transition={{ type: "spring", stiffness: 180, damping: 20 }}
              className="relative max-h-[90vh] w-full md:w-[720px] rounded-2xl bg-white p-6 shadow-xl overflow-auto"
              onClick={(e) => e.stopPropagation()}
            >
              <div className="flex items-start gap-3">
                <div className={`rounded-xl bg-gradient-to-r ${active.color} p-3 w-12 h-12 flex items-center justify-center text-xl`}>
                  {active.icon}
                </div>
                <div className="min-w-0">
                  <h3 className="text-xl font-bold text-slate-900">{active.title}</h3>
                  <p className="text-slate-600 text-sm">{active.goal}</p>
                </div>
              </div>

              <div className="mt-4 space-y-2">
                {active.prompts.map((p, i) => (
                  <p key={i} className="text-slate-700 text-sm leading-relaxed">‚Ä¢ {p}</p>
                ))}
              </div>

              <div className="mt-4">
                <label className="text-sm font-semibold text-slate-700">
                  –ñ–∞—É–∞–±—ã“£:
                </label>
                <textarea
                  value={draft}
                  onChange={(e) => setDraft(e.target.value)}
                  rows={6}
                  className="mt-2 w-full rounded-xl border border-slate-300 px-3 py-2 outline-none focus:ring-2 focus:ring-teal-500/60"
                  placeholder="–û—Å—ã –∂–µ—Ä–≥–µ –∂–∞–∑—ã“£—ã–∑‚Ä¶"
                />
                <div className="mt-2 flex flex-wrap gap-3">
                  <button
                    onClick={onSave}
                    className="rounded-xl bg-[#1aa6b5] text-white font-semibold px-4 py-2 hover:opacity-95"
                  >
                    –°–∞“õ—Ç–∞—É
                  </button>
                  <button
                    onClick={closeTask}
                    className="rounded-xl border border-slate-300 px-4 py-2 font-semibold text-slate-700 hover:bg-slate-50"
                  >
                    –ñ–∞–±—É
                  </button>
                </div>
              </div>

              <p className="mt-3 text-xs text-slate-500">
                –ö–µ“£–µ—Å: –¥–∞—É—ã—Å—Ç—ã“õ –∂–∞—É–∞–ø –∂–∞–∑“ì—ã“£ –∫–µ–ª—Å–µ, —Ç–µ–ª–µ—Ñ–æ–Ω –¥–∏–∫—Ç–æ–≤–∫–∞—Å—ã–Ω “õ–æ–ª–¥–∞–Ω.
              </p>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  );
}
